<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">

    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java, properties, xml"/>
    <property name="severity" value="error"/>

    <!-- https://checkstyle.org/filefilters/beforeexecutionexclusionfilefilter.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- https://checkstyle.org/checks/whitespace/filetabcharacter.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>

    <!-- https://checkstyle.org/checks/misc/newlineatendoffile.html -->
    <module name="NewlineAtEndOfFile"/>

    <!-- https://checkstyle.org/filters/suppressionfilter.html -->
    <module name="SuppressionFilter">
        <property name="file" value="${configDirectory}/suppressions.xml"/>
    </module>

    <!-- https://checkstyle.org/filters/suppresswarningsfilter.html -->
    <module name="SuppressWarningsFilter"/>

    <module name="TreeWalker">

        <!-- https://gitlab.com/stellardrift/stylecheck/-/blob/trunk/src/main/java/ca/stellardrift/stylecheck/AnnotationsCloseToType.java -->
        <module name="AnnotationsCloseToType">
            <property name="typeUseAnnotations" value="Nullable, RegExp, NonNull"/>
        </module>

        <!-- https://checkstyle.org/checks/misc/arraytypestyle.html -->
        <module name="ArrayTypeStyle"/>

        <!-- https://checkstyle.org/checks/imports/avoidstarimport.html -->
        <module name="AvoidStarImport"/>

        <!-- https://checkstyle.org/config_misc.html#CommentsIndentation -->
        <module name="CommentsIndentation"/>

        <!-- https://checkstyle.org/config_imports.html#CustomImportOrder -->
        <module name="CustomImportOrder">
            <property name="customImportOrderRules" value="THIRD_PARTY_PACKAGE###STATIC"/>
            <property name="standardPackageRegExp" value="^$"/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
        </module>

        <!-- https://checkstyle.org/config_whitespace.html#EmptyForInitializerPad -->
        <module name="EmptyForInitializerPad"/>

        <!-- https://checkstyle.org/config_whitespace.html#EmptyForIteratorPad -->
        <module name="EmptyForIteratorPad"/>

        <!-- https://checkstyle.org/config_whitespace.html#EmptyLineSeparator -->
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="tokens"
                      value="CLASS_DEF, CTOR_DEF, ENUM_DEF, IMPORT, INSTANCE_INIT, INTERFACE_DEF, METHOD_DEF, STATIC_IMPORT, STATIC_INIT, VARIABLE_DEF"/> <!-- remove PACKAGE_DEF, temporarily remove COMPACT_CTOR_DEF, RECORD_DEF -->
        </module>

        <!-- https://checkstyle.org/config_coding.html#FallThrough -->
        <module name="FallThrough">
            <property name="checkLastCaseGroup" value="true"/>
        </module>

        <!-- https://checkstyle.org/config_design.html#HideUtilityClassConstructor -->
        <module name="HideUtilityClassConstructor"/>

        <!-- https://checkstyle.org/checks/imports/illegalimport.html -->
        <module name="IllegalImport">
            <property name="illegalClasses"
                      value="org.jetbrains.annotations.Nullable, org.jetbrains.annotations.NotNull"/>
            <property name="illegalPkgs"
                      value="javax"/>
        </module>

        <!-- https://checkstyle.org/config_coding.html#IllegalTokenText -->
        <module name="IllegalTokenText">
            <property name="format"
                      value="($|[^\\])\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message"
                      value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
            <property name="tokens" value="CHAR_LITERAL, STRING_LITERAL"/>
        </module>

        <!-- https://checkstyle.org/checks/javadoc/invalidjavadocposition.html -->
        <module name="InvalidJavadocPosition"/>

        <!-- https://checkstyle.org/checks/javadoc/javadoccontentlocation.html -->
        <module name="JavadocContentLocation"/>

        <!-- https://checkstyle.org/checks/javadoc/javadocmissingwhitespaceafterasterisk.html -->
        <module name="JavadocMissingWhitespaceAfterAsterisk"/>

        <!-- https://checkstyle.org/checks/javadoc/javadocparagraph.html -->
        <module name="JavadocParagraph"/>

        <!-- https://checkstyle.org/checks/javadoc/javadoctagcontinuationindentation.html -->
        <module name="JavadocTagContinuationIndentation"/>

        <!-- https://checkstyle.org/checks/blocks/leftcurly.html -->
        <module name="LeftCurly"/>

        <!-- https://checkstyle.org/checks/coding/matchxpath.html -->
        <module name="MatchXpath">
            <property name="query" value="//ANNOTATION[./IDENT[@text='NotNull']]"/>
            <message key="matchxpath.match"
                     value="Avoid using @NotNull annotation. Use @NonNull (or preferably @NullMarked) instead."/>
        </module>

        <!-- https://checkstyle.org/config_whitespace.html#MethodParamPad -->
        <module name="MethodParamPad"/>

        <!-- https://checkstyle.org/config_coding.html#MultipleVariableDeclarations -->
        <module name="MultipleVariableDeclarations"/>

        <!-- https://checkstyle.org/config_coding.html#NoFinalizer -->
        <module name="NoFinalizer"/>

        <!-- https://checkstyle.org/config_whitespace.html#NoLineWrap -->
        <module name="NoLineWrap"/>

        <!-- https://checkstyle.org/config_javadoc.html#NonEmptyAtclauseDescription -->
        <module name="NonEmptyAtclauseDescription"/>

        <!-- https://checkstyle.org/config_whitespace.html#NoWhitespaceAfter -->
        <module name="NoWhitespaceAfter">
            <property name="allowLineBreaks" value="false"/>
        </module>

        <!-- https://checkstyle.org/config_whitespace.html#NoWhitespaceBefore -->
        <module name="NoWhitespaceBefore">
            <property name="allowLineBreaks" value="true"/>
            <property name="tokens"
                      value="COMMA, DOT, LABELED_STAT, METHOD_REF, POST_DEC, POST_INC, SEMI"/> <!-- remove ELLIPSIS -->
        </module>

        <!-- https://checkstyle.org/config_coding.html#OneStatementPerLine -->
        <module name="OneStatementPerLine"/>

        <!-- https://checkstyle.org/config_misc.html#OuterTypeFilename -->
        <module name="OuterTypeFilename"/>

        <!-- https://checkstyle.org/config_imports.html#RedundantImport -->
        <module name="RedundantImport"/>

        <!-- https://checkstyle.org/config_javadoc.html#RequireEmptyLineBeforeBlockTagGroup -->
        <module name="RequireEmptyLineBeforeBlockTagGroup"/>

        <!-- https://checkstyle.org/checks/coding/requirethis.html -->
        <module name="RequireThis"/>

        <!-- https://checkstyle.org/config_blocks.html#RightCurly -->
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens"
                      value="ANNOTATION_DEF, CLASS_DEF, CTOR_DEF, ENUM_DEF, INSTANCE_INIT, LITERAL_FOR, LITERAL_WHILE, METHOD_DEF, STATIC_INIT"/>
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlySame"/>
            <property name="option" value="same"/>
            <property name="tokens"
                      value="LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_TRY"/> <!-- add LITERAL_DO -->
        </module>

        <!-- https://checkstyle.org/config_whitespace.html#SeparatorWrap -->
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapEol"/>
            <property name="option" value="eol"/>
            <property name="tokens"
                      value="COMMA, SEMI, ELLIPSIS, RBRACK, ARRAY_DECLARATOR, METHOD_REF"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapNl"/>
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT, AT"/>
        </module>

        <!-- https://checkstyle.org/config_coding.html#SimplifyBooleanExpression -->
        <module name="SimplifyBooleanExpression"/>

        <!-- https://checkstyle.org/config_coding.html#SimplifyBooleanReturn -->
        <module name="SimplifyBooleanReturn"/>

        <!-- https://checkstyle.org/config_whitespace.html#SingleSpaceSeparator -->
        <module name="SingleSpaceSeparator">
            <property name="validateComments" value="true"/>
        </module>

        <!-- https://checkstyle.org/config_annotation.html#SuppressWarningsHolder -->
        <module name="SuppressWarningsHolder"/>

        <!-- https://checkstyle.org/filters/suppresswarningsfilter.html -->
        <module name="SuppressWarningsHolder"/>

        <!-- https://checkstyle.org/config_whitespace.html#TypecastParenPad -->
        <module name="TypecastParenPad"/>

        <!-- https://checkstyle.org/config_imports.html#UnusedImports -->
        <module name="UnusedImports"/>

        <!-- https://checkstyle.org/config_whitespace.html#WhitespaceAfter -->
        <module name="WhitespaceAfter"/>

        <!-- https://checkstyle.org/config_whitespace.html#WhitespaceAround -->
        <module name="WhitespaceAround">
            <property name="ignoreEnhancedForColon" value="false"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="tokens"
                      value="ASSIGN, COLON, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
        </module>

    </module>

</module>
